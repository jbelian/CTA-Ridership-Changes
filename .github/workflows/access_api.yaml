name: Pull Data from Chicago Data Portal
on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'
permissions:
  contents: write
jobs:
  download-data:
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      GIST_UPDATE_TOKEN: ${{ secrets.GIST_UPDATE_TOKEN }}
      SOCRATA_TOKEN: ${{ secrets.SOCRATA_TOKEN }}
    steps:            
      - name: Check GH_TOKEN
        run: |
          if [[ -z "${GH_TOKEN}" ]]; then
            echo "GH_TOKEN is not set"
          else
            echo "GH_TOKEN is set"
          fi

      - name: Checkout repo
        uses: actions/checkout@v3
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: pip3 install requests sodapy

      - name: Run initial Python script
        run: python .github/workflows/access_api.py

      - name: Stage files and check for changes
        run: |
          git add data/bus.json data/lastModified.json
          if git diff --staged --quiet; then
            echo 'staged=false' >> $GITHUB_ENV
          else
            echo 'staged=true' >> $GITHUB_ENV
          fi

      - name: Install GDAL dependencies and run second script
        if: env.staged == 'true'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgdal-dev gdal-bin
          pip3 install GDAL==3.4.1 bs4
          python .github/workflows/kmz_to_json.py

      - name: Stage map file
        if: env.staged == 'true'
        run: git add data/map.json

      - name: Commit and push changes
        if: env.staged == 'true'
        run: |
          git config user.email "${{ github.actor }}@users.noreply.github.com"
          git config user.name "GitHub Action"
          git checkout test-branch
          git commit -m "automatically fetched update"
          git push origin test-branch

      - name: Setup Node.js environment
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install dependencies
        run: |
          rm -rf node_modules package-lock.json
          npm install
          git config user.email "${{ github.actor }}@users.noreply.github.com"
          git config user.name "${{ github.actor }}"
          git add package-lock.json package.json
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "updated"
            git push origin test-branch
          fi

      - name: Build
        run: npm run build
      
      - name: Deploy
        run: npm run deploy
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
